# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4



#variables

set $idle ~/.config/swaylock/idle.sh
set $lockscreen ~/Pictures/wallpaper/lockscreen.*
set $power ~/.config/rofi/modi/power
set $wifi ~/.config/rofi/modi/wifi-menu.sh
set $setting ~/.config/rofi/modi/settings.sh
set $term kitty
set $menu "rofi -modi \\"drun,window,combi\\" -show drun"
set $screenshot "grim ~/Pictures/scrn-$(date +\\"%Y-%m-%d-%H-%M-%S\\").png"
set $screenclip "slurp | grim -g - ~/Pictures/scrn-$(date +\\"%Y-%m-%d-%H-%M-%S\\").png"
exec ~/.fehbg
set $cl_high #009ddc
set $cl_indi #d9d8d8
set $cl_back #231f20
set $cl_fore #d9d8d8
set $cl_urge #ee2e24


# Colors                border   bg       text     indi     childborder
client.focused          $cl_high $cl_high $cl_fore $cl_indi $cl_high
client.focused_inactive $cl_back $cl_back $cl_fore $cl_back $cl_back
client.unfocused        $cl_back $cl_back $cl_fore $cl_back $cl_back
client.urgent           $cl_urge $cl_urge $cl_fore $cl_urge $cl_urge

#input config

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:Sans 12

# Window borders
for_window [class=".*"] border pixel 1
smart_gaps on
default_border pixel 1
default_floating_border normal
hide_edge_borders smart

gaps inner 10


# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet
# Notifications
bindsym Control+Space exec makoctl dismiss
bindsym Control+Shift+Space exec makoctl dismiss --all
# Multimedia
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume $(pacmd list-sinks |awk '/* index:/{print $3}') +1%
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume $(pacmd list-sinks |awk '/* index:/{print $3}') -1%
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute $(pacmd list-sinks |awk '/* index:/{print $3}') toggle
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous
# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod
# Brightness controls
bindsym XF86MonBrightnessUp exec --no-startup-id light -A 1
bindsym XF86MonBrightnessDown exec --no-startup-id light -U 1
# start a terminal
bindsym $mod+Return exec kitty

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
bindsym $mod+d exec --no-startup-id $menu
# A more modern dmenu replacement is rofi:
# bindcode $mod+40 exec rofi -modi drun,run -show drun
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
#bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

#app shortcuts
bindsym $mod+Shift+f exec kitty ranger
bindsym $mod+Escape exec $power
bindsym $mod+Print exec $screenshot
bindsym $mod+Shift+print exec $screenclip
bindsym $mod+End exec $wifi
bindsym $mod+Home exec $setting

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1   1:
set $ws2   2:
set $ws3   3:3
set $ws4   4:4
set $ws5   5:5
set $ws6   6:6
set $ws7   7:7
set $ws8   8:8
set $ws9   9:9
set $ws0   10:10
set $wsF1  11:
set $wsF2  12:
set $wsF3  13:13
set $wsF4  14:14
set $wsF5  15:15
set $wsF6  16:16
set $wsF7  17:17
set $wsF8  18:
set $wsF9  19:19
set $wsF10 20:
set $wsF11 21:
set $wsF12 22:

# switch to workspace
bindsym $mod+1   workspace $ws1
bindsym $mod+2   workspace $ws2
bindsym $mod+3   workspace $ws3
bindsym $mod+4   workspace $ws4
bindsym $mod+5   workspace $ws5
bindsym $mod+6   workspace $ws6
bindsym $mod+7   workspace $ws7
bindsym $mod+8   workspace $ws8
bindsym $mod+9   workspace $ws9
bindsym $mod+0   workspace $ws0
bindsym $mod+F1  workspace $wsF1
bindsym $mod+F2  workspace $wsF2
bindsym $mod+F3  workspace $wsF3
bindsym $mod+F4  workspace $wsF4
bindsym $mod+F5  workspace $wsF5
bindsym $mod+F6  workspace $wsF6
bindsym $mod+F7  workspace $wsF7
bindsym $mod+F8  workspace $wsF8
bindsym $mod+F9  workspace $wsF9
bindsym $mod+F10 workspace $wsF10
bindsym $mod+F11 workspace $wsF11
bindsym $mod+F12 workspace $wsF12

# move focused container to workspace
bindsym $mod+Shift+1    move container to workspace $ws1
bindsym $mod+Shift+2    move container to workspace $ws2
bindsym $mod+Shift+3    move container to workspace $ws3
bindsym $mod+Shift+4    move container to workspace $ws4
bindsym $mod+Shift+5    move container to workspace $ws5
bindsym $mod+Shift+6    move container to workspace $ws6
bindsym $mod+Shift+7    move container to workspace $ws7
bindsym $mod+Shift+8    move container to workspace $ws8
bindsym $mod+Shift+9    move container to workspace $ws9
bindsym $mod+Shift+0    move container to workspace $ws0
bindsym $mod+Shift+F1   move container to workspace $wsF1
bindsym $mod+Shift+F2   move container to workspace $wsF2
bindsym $mod+Shift+F3   move container to workspace $wsF3
bindsym $mod+Shift+F4   move container to workspace $wsF4
bindsym $mod+Shift+F5   move container to workspace $wsF5
bindsym $mod+Shift+F6   move container to workspace $wsF6
bindsym $mod+Shift+F7   move container to workspace $wsF7
bindsym $mod+Shift+F8   move container to workspace $wsF8
bindsym $mod+Shift+F9   move container to workspace $wsF9
bindsym $mod+Shift+F10  move container to workspace $wsF10
bindsym $mod+Shift+F11  move container to workspace $wsF11
bindsym $mod+Shift+F12  move container to workspace $wsF12

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
set $mode_system System: (l) lock, (e) logout, (s) suspend, (r) reboot, (S) shutdown, (R) UEFI
mode "$mode_system" {
    bindsym l exec $lock, mode "default"
    bindsym e exit
    bindsym s exec --no-startup-id systemctl suspend, mode "default"
    bindsym r exec --no-startup-id systemctl reboot, mode "default"
    bindsym Shift+s exec --no-startup-id systemctl poweroff -i, mode "default"
    bindsym Shift+r exec --no-startup-id systemctl reboot --firmware-setup, mode "default"

    # return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+Shift+e mode "$mode_system"
# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
exec_always --no-startup-id $HOME/.config/polybar/launch.sh
